<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>我的个人博客</title><link>/Blog/</link><description>记录生活美好</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://cdn.jsdelivr.net/gh/LSQsjtu/Blog@gh-pages/f-logo.png</url><title>我的个人博客</title><link>/Blog/</link></image><language>zh-CN</language><lastBuildDate>Thu, 28 Oct 2021 14:02:12 +0806</lastBuildDate><pubDate>Thu, 28 Oct 2021 14:02:12 +0806</pubDate><item><title>超算平台使用</title><link>/Blog/archives/%E8%B6%85%E7%AE%97%E5%B9%B3%E5%8F%B0/</link><description>&lt;p&gt;&lt;strong&gt;超算平台&lt;/strong&gt;&lt;/p&gt;&lt;figure style="flex: 35.45688545688546" &gt;&lt;img width="551" height="777" src="https://cdn.jsdelivr.net/gh/LSQsjtu/Blog@gh-pages/archives/assets/0c38935ddf710089cd795b7042de8e9d.png" /&gt;&lt;/figure&gt;&lt;p&gt;记得注释掉#JSUB后的注释&lt;/p&gt;&lt;p&gt;source activate要在base环境下执行&lt;/p&gt;&lt;h1&gt;测试 分配 GPU&lt;/h1&gt;
&lt;h3&gt;测试脚本如下， 使用 torch.device('cuda+str(gpu_index)') 即可&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;num_gpu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;device_count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_gpu&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_device_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cur_gpu: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_device_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;gpu_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

    &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cuda:&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gpu_index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_available&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;终端运行脚本&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
#JSUB -J gpu
#JSUB -n 4
##JSUB -q normal
#JSUB -m h3cgpu01
#JSUB -o out.%J
#JSUB -e err.%J
source /public/jhinno/unischeduler/job_starter/unisched

module load miniconda3
sleep 1
source activate
conda activate wxr_cu111
cd ~/lsq/test_cuda
python test_cuda.py &amp;gt;&amp;gt; ./output.log
###############################

sleep 100
nvidia-smi &amp;gt;&amp;gt; nvidia.log

&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;输出结果&lt;/h3&gt;
&lt;p&gt;cur_gpu:  NVIDIA A100-PCIE-40GB
cur_gpu:  NVIDIA A100-PCIE-40GB
cur_gpu:  NVIDIA A100-PCIE-40GB
cur_gpu:  NVIDIA A100-PCIE-40GB
cur_gpu:  NVIDIA A100-PCIE-40GB
cur_gpu:  NVIDIA A100-PCIE-40GB
cur_gpu:  NVIDIA A100-PCIE-40GB
cur_gpu:  NVIDIA A100-PCIE-40GB
cuda:2
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:2')&lt;/p&gt;&lt;p&gt;jhosts查看节点剩余数量&lt;/p&gt;&lt;figure style="flex: 138.3084577114428" &gt;&lt;img width="1112" height="402" src="https://cdn.jsdelivr.net/gh/LSQsjtu/Blog@gh-pages/archives/assets/5443662137d44cd29357efc46e1cdf04.png" /&gt;&lt;/figure&gt;</description><author>1959376918@qq.com (刘胜琪)</author><guid isPermaLink="true">/Blog/archives/%E8%B6%85%E7%AE%97%E5%B9%B3%E5%8F%B0/</guid><pubDate>Fri, 01 Oct 2021 00:00:00 +0806</pubDate></item><item><title>算子编译</title><link>/Blog/archives/%E7%AE%97%E5%AD%90%E7%BC%96%E8%AF%91/</link><description>&lt;p&gt;&lt;strong&gt;算子编译&lt;/strong&gt;&lt;/p&gt;&lt;figure style="flex: 158.61423220973782" &gt;&lt;img width="847" height="267" src="https://cdn.jsdelivr.net/gh/LSQsjtu/Blog@gh-pages/archives/assets/8a8da5282cc8e2f6eb39c83bf48c7a52.png" /&gt;&lt;/figure&gt;&lt;p&gt;高低版本的问题&lt;/p&gt;</description><author>1959376918@qq.com (刘胜琪)</author><guid isPermaLink="true">/Blog/archives/%E7%AE%97%E5%AD%90%E7%BC%96%E8%AF%91/</guid><pubDate>Sat, 02 Oct 2021 00:00:00 +0806</pubDate></item><item><title>中国医生</title><link>/Blog/archives/Doctor%20of%20China/</link><description>&lt;p&gt;&lt;strong&gt;中国医生&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;讲诉的武汉疫情从发生到最后抗击成功的一系列故事。&lt;/p&gt;&lt;p&gt;最初不顾一切接收病人，每个医生都拼尽全力去救治病人。&lt;/p&gt;&lt;p&gt;但面对家人的困难，面对亲情的难以守护，内心会有不断的煎熬，往往崩溃就在那么一瞬间，自己对于感情往往非常在意，对于人们的反应，对于关心和呵护会有很大的情绪波动。生而为人，这是独一无二的魅力。&lt;/p&gt;&lt;p&gt;面对孕妇，从一开始的难以接待，到最后因为医生责任，背锅等原因，却义无反顾得去救治这一条人命。&lt;/p&gt;&lt;p&gt;面对冲入医院的人们，医护人员难以维持秩序，大部分普通民众面对恐慌只是一味的去争抢资源，也许就这样增加了感染，减少了医药物资。&lt;/p&gt;&lt;p&gt;面对重病患者，从插管到拔管，每一个人的突发状况，面对多器官功能衰竭，医务人员在病毒面前显得无能为力时，只能等着一个个病人慢慢离世。在ICU重症病室中每一个人都在争分夺秒，切换镜头的使用太多，部分情节故事没有很好得展现，就匆匆结尾。&lt;/p&gt;&lt;p&gt;面对亲人的去世，病患家属的悲伤情绪是难以言诉的，变成了孤儿，失去了过去时光中最亲爱的人。&lt;/p&gt;&lt;p&gt;剧中那个广东人刻画的格外开放，喜欢去做自己心中的大佬，利用自己的才华去展现著名医院的强大知识。&lt;/p&gt;&lt;p&gt;作为最高的行政人员，在喊着增加物资，增加人员，最高者要有大局观，坚持自己心中所想去不断努力，以后面对灾难，一切资源要跟上，医疗卫生条件，无菌室的建立一定要认真搭建。&lt;/p&gt;</description><author>1959376918@qq.com (刘胜琪)</author><guid isPermaLink="true">/Blog/archives/Doctor%20of%20China/</guid><pubDate>Sun, 03 Oct 2021 00:00:00 +0806</pubDate></item><item><title>摄影构图</title><link>/Blog/archives/camera-shooting/</link><description>&lt;p&gt;&lt;strong&gt;摄影&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;两边阴影，中间光亮突出重点，突出图片主体。&lt;/p&gt;&lt;p&gt;be open-minded&lt;/p&gt;</description><author>1959376918@qq.com (刘胜琪)</author><guid isPermaLink="true">/Blog/archives/camera-shooting/</guid><pubDate>Wed, 06 Oct 2021 00:00:00 +0806</pubDate></item><item><title>失控玩家</title><link>/Blog/archives/Out%20of%20Control/</link><description>&lt;p&gt;&lt;strong&gt;失控玩家&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;欢快搞笑的快节奏电影，引入游戏视角，思考人存在的意义。&lt;/p&gt;&lt;p&gt;主要围绕游戏中的世界线，反思什么是存在的，什么是活着的。“我思故我在”，个体意识被强烈地放大，不在意是否自己的世界是不是存在的。电影中运用了大量特效场景，非常壮观宏大的场面，夹杂了一点点的人物感情，最后便是一个happy ending。不是特别深沉的题材，更偏向于科幻风，但想表达和反思的内容过多，是励志但却并没有真正振聋发聩的效果。&lt;/p&gt;</description><author>1959376918@qq.com (刘胜琪)</author><guid isPermaLink="true">/Blog/archives/Out%20of%20Control/</guid><pubDate>Fri, 08 Oct 2021 00:00:00 +0806</pubDate></item><item><title>Tracking 实验结果</title><link>/Blog/archives/3DtrackingOnNuScences/</link><description>&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Tracking 实验结果&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;mini dataset上&lt;/p&gt;&lt;p&gt;==detection结果==&lt;/p&gt;&lt;p&gt;Saving metrics to: work_dirs/nusc_nsweep_10
mAP: 0.6720
mATE: 0.2821
mASE: 0.2995
mAOE: 0.2497
mAVE: 0.3732
mAAE: 0.3550
NDS: 0.6801
Eval time: 6.3s&lt;/p&gt;&lt;p&gt;Per-class results:
Object Class    AP      ATE     ASE     AOE     AVE     AAE
car     0.864   0.176   0.154   0.120   0.230   0.121
truck   0.656   0.275   0.165   0.018   0.103   0.386
bus     0.760   0.255   0.150   0.028   0.810   0.195
trailer 0.989   0.220   0.274   0.008   0.007   1.000
construction_vehicle    0.000   1.000   1.000   1.000   1.000   1.000
pedestrian      0.933   0.129   0.244   0.247   0.210   0.104
motorcycle      0.744   0.212   0.245   0.350   0.083   0.033
bicycle 0.493   0.167   0.254   0.454   0.542   0.001
traffic_cone    0.496   0.077   0.268   nan     nan     nan
barrier 0.785   0.310   0.241   0.022   nan     nan
Evaluation nusc: Nusc v1.0-trainval Evaluation
car Nusc dist AP@0.5, 1.0, 2.0, 4.0
77.57, 86.67, 89.92, 91.40 mean AP: 0.8639023655074297
truck Nusc dist AP@0.5, 1.0, 2.0, 4.0
62.22, 64.92, 66.75, 68.44 mean AP: 0.6558199662311992
construction_vehicle Nusc dist AP@0.5, 1.0, 2.0, 4.0
0.00, 0.00, 0.00, 0.00 mean AP: 0.0
bus Nusc dist AP@0.5, 1.0, 2.0, 4.0
66.41, 76.28, 79.49, 81.99 mean AP: 0.7604156206303931
trailer Nusc dist AP@0.5, 1.0, 2.0, 4.0
98.89, 98.89, 98.89, 98.89 mean AP: 0.9889229245954395
barrier Nusc dist AP@0.5, 1.0, 2.0, 4.0
53.24, 76.08, 92.29, 92.29 mean AP: 0.7847208664826456
motorcycle Nusc dist AP@0.5, 1.0, 2.0, 4.0
65.55, 74.64, 78.30, 79.07 mean AP: 0.7439005900622773
bicycle Nusc dist AP@0.5, 1.0, 2.0, 4.0
48.41, 49.64, 49.64, 49.64 mean AP: 0.49334568921118616
pedestrian Nusc dist AP@0.5, 1.0, 2.0, 4.0
91.38, 92.83, 93.79, 95.25 mean AP: 0.9331069588049957
traffic_cone Nusc dist AP@0.5, 1.0, 2.0, 4.0
49.02, 49.02, 49.02, 51.44 mean AP: 0.49623772316396364&lt;/p&gt;&lt;p&gt;==tracking结果==&lt;/p&gt;&lt;ol&gt;
&lt;li&gt;greeding&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Calculating metrics...
Saving metrics to: ./work_dirs/track/10_greedy&lt;/p&gt;&lt;h3&gt;Final results&lt;/h3&gt;
&lt;p&gt;Per-class results:
                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD
bicycle         0.412   0.552   0.448   0.808   58      0.362   0.155   2       4       12.8    26      5       32      0       0       0.12   1.75
bus             0.812   0.571   0.826   0.958   86      0.791   0.298   3       0       4.6     71      3       15      0       2       0.90   1.10
car             0.807   0.438   0.863   0.861   2729    0.735   0.277   109     27      199.4   2328    323     374     27      20      0.36   0.59
motorcy         0.736   0.547   0.702   0.952   238     0.660   0.342   7       3       12.5    165     8       71      2       1       0.39   2.00
pedestr         0.850   0.316   0.848   0.895   1470    0.750   0.302   61      16      98.5    1231    129     223     16      5       0.46   0.76
trailer         1.000   0.210   1.000   1.000   41      1.000   0.210   1       0       0.0     41      0       0       0       0       0.00   0.00
truck           0.536   0.506   0.723   0.617   177     0.446   0.295   5       4       41.5    128     49      49      0       1       0.10   0.20&lt;/p&gt;&lt;p&gt;Aggregated results:
AMOTA   0.736
AMOTP   0.448
RECALL  0.773
MOTAR   0.870
GT      685
MOTA    0.678
MOTP    0.268
MT      188
ML      54
FAF     52.8
TP      3990
FP      517
FN      764
IDS     45
FRAG    29
TID     0.33
LGD     0.92
Eval time: 104.7s&lt;/p&gt;&lt;p&gt;Rendering curves&lt;/p&gt;&lt;ol start="2"&gt;
&lt;li&gt;&lt;p&gt;cost&lt;/p&gt;&lt;p&gt;设定的threshold为0.5&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
  &lt;th&gt;K的值&lt;/th&gt;
  &lt;th&gt;未训练结果&lt;/th&gt;
  &lt;th&gt;训练结果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;td&gt;4&lt;/td&gt;
  &lt;td&gt;Per-class results:&lt;br/&gt;                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD&lt;br/&gt;bicycle         0.000   1.908   0.621   0.000   58      0.000   0.172   3       1       80.8    7       59      22      29      4       0.14   0.93&lt;br/&gt;bus             0.000   2.000   0.000   0.000   86      0.000   2.000   0       5       500.0   0       nan     86      nan     nan     20.00  20.00&lt;br/&gt;car             0.000   2.000   0.000   0.000   2729    0.000   2.000   0       154     500.0   0       nan     2729    nan     nan     20.00  20.00&lt;br/&gt;motorcy         0.000   2.000   0.000   0.000   238     0.000   2.000   0       11      500.0   0       nan     238     nan     nan     20.00  20.00&lt;br/&gt;pedestr         0.000   2.000   0.000   0.000   1470    0.000   2.000   0       85      500.0   0       nan     1470    nan     nan     20.00  20.00&lt;br/&gt;trailer         0.000   2.000   0.000   0.000   41      0.000   2.000   0       1       500.0   0       nan     41      nan     nan     20.00  20.00&lt;br/&gt;truck           0.000   2.000   0.000   0.000   177     0.000   2.000   0       9       500.0   0       nan     177     nan     nan     20.00  20.00&lt;br/&gt;&lt;br/&gt;Aggregated results:&lt;br/&gt;AMOTA   0.000&lt;br/&gt;AMOTP   1.987&lt;br/&gt;RECALL  0.089&lt;br/&gt;MOTAR   0.000&lt;br/&gt;GT      685&lt;br/&gt;MOTA    0.000&lt;br/&gt;MOTP    1.739&lt;br/&gt;MT      3&lt;br/&gt;ML      266&lt;br/&gt;FAF     440.1&lt;br/&gt;TP      7&lt;br/&gt;FP      59&lt;br/&gt;FN      4763&lt;br/&gt;IDS     29&lt;br/&gt;FRAG    4&lt;br/&gt;TID     17.16&lt;br/&gt;LGD     17.28&lt;br/&gt;Eval time: 9.8s&lt;/td&gt;
  &lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;8&lt;/td&gt;
  &lt;td&gt;Per-class results:&lt;br/&gt;                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD&lt;br/&gt;bicycle         0.000   1.908   0.621   0.000   58      0.000   0.172   3       1       80.8    7       59      22      29      4       0.14   0.93&lt;br/&gt;bus             0.000   2.000   0.000   0.000   86      0.000   2.000   0       5       500.0   0       nan     86      nan     nan     20.00  20.00&lt;br/&gt;car             0.000   2.000   0.000   0.000   2729    0.000   2.000   0       154     500.0   0       nan     2729    nan     nan     20.00  20.00&lt;br/&gt;motorcy         0.000   2.000   0.000   0.000   238     0.000   2.000   0       11      500.0   0       nan     238     nan     nan     20.00  20.00&lt;br/&gt;pedestr         0.000   2.000   0.000   0.000   1470    0.000   2.000   0       85      500.0   0       nan     1470    nan     nan     20.00  20.00&lt;br/&gt;trailer         0.000   2.000   0.000   0.000   41      0.000   2.000   0       1       500.0   0       nan     41      nan     nan     20.00  20.00&lt;br/&gt;truck           0.000   2.000   0.000   0.000   177     0.000   2.000   0       9       500.0   0       nan     177     nan     nan     20.00  20.00&lt;br/&gt;&lt;br/&gt;Aggregated results:&lt;br/&gt;AMOTA   0.000&lt;br/&gt;AMOTP   1.987&lt;br/&gt;RECALL  0.089&lt;br/&gt;MOTAR   0.000&lt;br/&gt;GT      685&lt;br/&gt;MOTA    0.000&lt;br/&gt;MOTP    1.739&lt;br/&gt;MT      3&lt;br/&gt;ML      266&lt;br/&gt;FAF     440.1&lt;br/&gt;TP      7&lt;br/&gt;FP      59&lt;br/&gt;FN      4763&lt;br/&gt;IDS     29&lt;br/&gt;FRAG    4&lt;br/&gt;TID     17.16&lt;br/&gt;LGD     17.28&lt;br/&gt;Eval time: 9.8s&lt;/td&gt;
  &lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;12&lt;/td&gt;
  &lt;td&gt;Per-class results:&lt;br/&gt;                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD&lt;br/&gt;bicycle         0.000   1.908   0.621   0.000   58      0.000   0.172   3       1       80.8    7       59      22      29      4       0.14   0.93&lt;br/&gt;bus             0.000   2.000   0.000   0.000   86      0.000   2.000   0       5       500.0   0       nan     86      nan     nan     20.00  20.00&lt;br/&gt;car             0.000   2.000   0.000   0.000   2729    0.000   2.000   0       154     500.0   0       nan     2729    nan     nan     20.00  20.00&lt;br/&gt;motorcy         0.000   2.000   0.000   0.000   238     0.000   2.000   0       11      500.0   0       nan     238     nan     nan     20.00  20.00&lt;br/&gt;pedestr         0.000   2.000   0.000   0.000   1470    0.000   2.000   0       85      500.0   0       nan     1470    nan     nan     20.00  20.00&lt;br/&gt;trailer         0.000   2.000   0.000   0.000   41      0.000   2.000   0       1       500.0   0       nan     41      nan     nan     20.00  20.00&lt;br/&gt;truck           0.000   2.000   0.000   0.000   177     0.000   2.000   0       9       500.0   0       nan     177     nan     nan     20.00  20.00&lt;br/&gt;&lt;br/&gt;Aggregated results:&lt;br/&gt;AMOTA   0.000&lt;br/&gt;AMOTP   1.987&lt;br/&gt;RECALL  0.089&lt;br/&gt;MOTAR   0.000&lt;br/&gt;GT      685&lt;br/&gt;MOTA    0.000&lt;br/&gt;MOTP    1.739&lt;br/&gt;MT      3&lt;br/&gt;ML      266&lt;br/&gt;FAF     440.1&lt;br/&gt;TP      7&lt;br/&gt;FP      59&lt;br/&gt;FN      4763&lt;br/&gt;IDS     29&lt;br/&gt;FRAG    4&lt;br/&gt;TID     17.16&lt;br/&gt;LGD     17.28&lt;br/&gt;Eval time: 10.0s&lt;/td&gt;
  &lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;16&lt;/td&gt;
  &lt;td&gt;Per-class results:&lt;br/&gt;                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD&lt;br/&gt;bicycle         0.000   1.908   0.621   0.000   58      0.000   0.172   3       1       80.8    7       59      22      29      4       0.14   0.93&lt;br/&gt;bus             0.000   2.000   0.000   0.000   86      0.000   2.000   0       5       500.0   0       nan     86      nan     nan     20.00  20.00&lt;br/&gt;car             0.000   2.000   0.000   0.000   2729    0.000   2.000   0       154     500.0   0       nan     2729    nan     nan     20.00  20.00&lt;br/&gt;motorcy         0.000   2.000   0.000   0.000   238     0.000   2.000   0       11      500.0   0       nan     238     nan     nan     20.00  20.00&lt;br/&gt;pedestr         0.000   2.000   0.000   0.000   1470    0.000   2.000   0       85      500.0   0       nan     1470    nan     nan     20.00  20.00&lt;br/&gt;trailer         0.000   2.000   0.000   0.000   41      0.000   2.000   0       1       500.0   0       nan     41      nan     nan     20.00  20.00&lt;br/&gt;truck           0.000   2.000   0.000   0.000   177     0.000   2.000   0       9       500.0   0       nan     177     nan     nan     20.00  20.00&lt;br/&gt;&lt;br/&gt;Aggregated results:&lt;br/&gt;AMOTA   0.000&lt;br/&gt;AMOTP   1.987&lt;br/&gt;RECALL  0.089&lt;br/&gt;MOTAR   0.000&lt;br/&gt;GT      685&lt;br/&gt;MOTA    0.000&lt;br/&gt;MOTP    1.739&lt;br/&gt;MT      3&lt;br/&gt;ML      266&lt;br/&gt;FAF     440.1&lt;br/&gt;TP      7&lt;br/&gt;FP      59&lt;br/&gt;FN      4763&lt;br/&gt;IDS     29&lt;br/&gt;FRAG    4&lt;br/&gt;TID     17.16&lt;br/&gt;LGD     17.28&lt;br/&gt;Eval time: 9.8s&lt;/td&gt;
  &lt;td&gt;Per-class results:&lt;br/&gt;                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD&lt;br/&gt;bicycle         0.199   1.051   0.397   0.667   58      0.241   0.182   2       5       16.3    21      7       35      2       1       0.38   1.88&lt;br/&gt;bus             0.366   1.340   0.558   1.000   86      0.395   0.228   2       2       0.0     34      0       38      14      1       2.88   2.88&lt;br/&gt;car             0.126   1.688   0.678   0.850   2729    0.168   0.207   66      32      50.0    540     81      879     1310    104     1.21   1.89&lt;br/&gt;motorcy         0.000   2.000   0.000   0.000   238     0.000   2.000   0       11      500.0   0       nan     238     nan     nan     20.00  20.00&lt;br/&gt;pedestr         0.018   1.861   0.810   0.619   1470    0.076   0.144   48      10      53.1    181     69      279     1010    60      0.45   0.98&lt;br/&gt;trailer         0.799   0.298   0.829   1.000   41      0.829   0.208   1       0       0.0     34      0       7       0       0       3.50   3.50&lt;br/&gt;truck           0.196   1.582   0.401   0.980   177     0.277   0.311   1       6       0.8     50      1       106     21      8       2.50   4.00&lt;br/&gt;&lt;br/&gt;Aggregated results:&lt;br/&gt;AMOTA   0.243&lt;br/&gt;AMOTP   1.403&lt;br/&gt;RECALL  0.525&lt;br/&gt;MOTAR   0.731&lt;br/&gt;GT      685&lt;br/&gt;MOTA    0.284&lt;br/&gt;MOTP    0.469&lt;br/&gt;MT      120&lt;br/&gt;ML      66&lt;br/&gt;FAF     88.6&lt;br/&gt;TP      860&lt;br/&gt;FP      158&lt;br/&gt;FN      1582&lt;br/&gt;IDS     2357&lt;br/&gt;FRAG    174&lt;br/&gt;TID     4.42&lt;br/&gt;LGD     5.02&lt;br/&gt;Eval time: 27.2s，有提升，但是是否泛用，有待猜测&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;没有训练的测试时有时没有recall值设置&lt;/p&gt;&lt;p&gt;只跟踪同类物体&lt;/p&gt;&lt;ol start="2"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
  &lt;th&gt;K的值&lt;/th&gt;
  &lt;th&gt;未训练结果&lt;/th&gt;
  &lt;th&gt;训练结果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
  &lt;td&gt;4&lt;/td&gt;
  &lt;td&gt;Per-class results:&lt;br/&gt;                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD&lt;br/&gt;bicycle         0.000   1.908   0.621   0.000   58      0.000   0.172   3       1       80.8    7       59      22      29      4       0.14   0.93&lt;br/&gt;bus             0.000   2.000   0.000   0.000   86      0.000   2.000   0       5       500.0   0       nan     86      nan     nan     20.00  20.00&lt;br/&gt;car             0.000   2.000   0.000   0.000   2729    0.000   2.000   0       154     500.0   0       nan     2729    nan     nan     20.00  20.00&lt;br/&gt;motorcy         0.000   2.000   0.000   0.000   238     0.000   2.000   0       11      500.0   0       nan     238     nan     nan     20.00  20.00&lt;br/&gt;pedestr         0.000   2.000   0.000   0.000   1470    0.000   2.000   0       85      500.0   0       nan     1470    nan     nan     20.00  20.00&lt;br/&gt;trailer         0.000   2.000   0.000   0.000   41      0.000   2.000   0       1       500.0   0       nan     41      nan     nan     20.00  20.00&lt;br/&gt;truck           0.000   2.000   0.000   0.000   177     0.000   2.000   0       9       500.0   0       nan     177     nan     nan     20.00  20.00&lt;br/&gt;&lt;br/&gt;Aggregated results:&lt;br/&gt;AMOTA   0.000&lt;br/&gt;AMOTP   1.987&lt;br/&gt;RECALL  0.089&lt;br/&gt;MOTAR   0.000&lt;br/&gt;GT      685&lt;br/&gt;MOTA    0.000&lt;br/&gt;MOTP    1.739&lt;br/&gt;MT      3&lt;br/&gt;ML      266&lt;br/&gt;FAF     440.1&lt;br/&gt;TP      7&lt;br/&gt;FP      59&lt;br/&gt;FN      4763&lt;br/&gt;IDS     29&lt;br/&gt;FRAG    4&lt;br/&gt;TID     17.16&lt;br/&gt;LGD     17.28&lt;br/&gt;Eval time: 9.8s&lt;/td&gt;
  &lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;8&lt;/td&gt;
  &lt;td&gt;Per-class results:&lt;br/&gt;                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD&lt;br/&gt;bicycle         0.000   1.908   0.621   0.000   58      0.000   0.172   3       1       80.8    7       59      22      29      4       0.14   0.93&lt;br/&gt;bus             0.000   2.000   0.000   0.000   86      0.000   2.000   0       5       500.0   0       nan     86      nan     nan     20.00  20.00&lt;br/&gt;car             0.000   2.000   0.000   0.000   2729    0.000   2.000   0       154     500.0   0       nan     2729    nan     nan     20.00  20.00&lt;br/&gt;motorcy         0.000   2.000   0.000   0.000   238     0.000   2.000   0       11      500.0   0       nan     238     nan     nan     20.00  20.00&lt;br/&gt;pedestr         0.000   2.000   0.000   0.000   1470    0.000   2.000   0       85      500.0   0       nan     1470    nan     nan     20.00  20.00&lt;br/&gt;trailer         0.000   2.000   0.000   0.000   41      0.000   2.000   0       1       500.0   0       nan     41      nan     nan     20.00  20.00&lt;br/&gt;truck           0.000   2.000   0.000   0.000   177     0.000   2.000   0       9       500.0   0       nan     177     nan     nan     20.00  20.00&lt;br/&gt;&lt;br/&gt;Aggregated results:&lt;br/&gt;AMOTA   0.000&lt;br/&gt;AMOTP   1.987&lt;br/&gt;RECALL  0.089&lt;br/&gt;MOTAR   0.000&lt;br/&gt;GT      685&lt;br/&gt;MOTA    0.000&lt;br/&gt;MOTP    1.739&lt;br/&gt;MT      3&lt;br/&gt;ML      266&lt;br/&gt;FAF     440.1&lt;br/&gt;TP      7&lt;br/&gt;FP      59&lt;br/&gt;FN      4763&lt;br/&gt;IDS     29&lt;br/&gt;FRAG    4&lt;br/&gt;TID     17.16&lt;br/&gt;LGD     17.28&lt;br/&gt;Eval time: 9.8s&lt;/td&gt;
  &lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;12&lt;/td&gt;
  &lt;td&gt;Per-class results:&lt;br/&gt;                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD&lt;br/&gt;bicycle         0.000   1.908   0.621   0.000   58      0.000   0.172   3       1       80.8    7       59      22      29      4       0.14   0.93&lt;br/&gt;bus             0.000   2.000   0.000   0.000   86      0.000   2.000   0       5       500.0   0       nan     86      nan     nan     20.00  20.00&lt;br/&gt;car             0.000   2.000   0.000   0.000   2729    0.000   2.000   0       154     500.0   0       nan     2729    nan     nan     20.00  20.00&lt;br/&gt;motorcy         0.000   2.000   0.000   0.000   238     0.000   2.000   0       11      500.0   0       nan     238     nan     nan     20.00  20.00&lt;br/&gt;pedestr         0.000   2.000   0.000   0.000   1470    0.000   2.000   0       85      500.0   0       nan     1470    nan     nan     20.00  20.00&lt;br/&gt;trailer         0.000   2.000   0.000   0.000   41      0.000   2.000   0       1       500.0   0       nan     41      nan     nan     20.00  20.00&lt;br/&gt;truck           0.000   2.000   0.000   0.000   177     0.000   2.000   0       9       500.0   0       nan     177     nan     nan     20.00  20.00&lt;br/&gt;&lt;br/&gt;Aggregated results:&lt;br/&gt;AMOTA   0.000&lt;br/&gt;AMOTP   1.987&lt;br/&gt;RECALL  0.089&lt;br/&gt;MOTAR   0.000&lt;br/&gt;GT      685&lt;br/&gt;MOTA    0.000&lt;br/&gt;MOTP    1.739&lt;br/&gt;MT      3&lt;br/&gt;ML      266&lt;br/&gt;FAF     440.1&lt;br/&gt;TP      7&lt;br/&gt;FP      59&lt;br/&gt;FN      4763&lt;br/&gt;IDS     29&lt;br/&gt;FRAG    4&lt;br/&gt;TID     17.16&lt;br/&gt;LGD     17.28&lt;br/&gt;Eval time: 10.0s&lt;/td&gt;
  &lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;16&lt;/td&gt;
  &lt;td&gt;Per-class results:&lt;br/&gt;                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD&lt;br/&gt;bicycle         0.435   0.671   0.552   0.688   58      0.379   0.192   2       4       25.0    32      10      26      0       0       0.20   1.60&lt;br/&gt;bus             0.787   0.568   0.814   0.900   86      0.733   0.294   3       0       10.3    70      7       16      0       3       0.90   1.10&lt;br/&gt;car             0.793   0.435   0.837   0.847   2729    0.702   0.266   104     33      213.0   2262    345     446     21      16      0.48   0.73&lt;br/&gt;motorcy         0.744   0.473   0.739   0.926   238     0.681   0.317   5       2       19.7    175     13      62      1       1       0.67   1.61&lt;br/&gt;pedestr         0.782   0.445   0.796   0.912   1470    0.693   0.331   47      22      75.4    1117    98      300     53      14      0.28   0.95&lt;br/&gt;trailer         1.000   0.210   1.000   1.000   41      1.000   0.210   1       0       0.0     41      0       0       0       0       0.00   0.00&lt;br/&gt;truck           0.462   0.494   0.672   0.580   177     0.390   0.286   4       5       42.4    119     50      58      0       1       0.00   0.12&lt;br/&gt;&lt;br/&gt;Aggregated results:&lt;br/&gt;AMOTA   0.715&lt;br/&gt;AMOTP   0.471&lt;br/&gt;RECALL  0.773&lt;br/&gt;MOTAR   0.836&lt;br/&gt;GT      685&lt;br/&gt;MOTA    0.654&lt;br/&gt;MOTP    0.271&lt;br/&gt;MT      166&lt;br/&gt;ML      66&lt;br/&gt;FAF     55.1&lt;br/&gt;TP      3816&lt;br/&gt;FP      523&lt;br/&gt;FN      908&lt;br/&gt;IDS     75&lt;br/&gt;FRAG    35&lt;br/&gt;TID     0.36&lt;br/&gt;LGD     0.87&lt;br/&gt;Eval time: 106.0s&lt;/td&gt;
  &lt;td&gt;Per-class results:&lt;br/&gt;                AMOTA   AMOTP   RECALL  MOTAR   GT      MOTA    MOTP    MT      ML      FAF     TP      FP      FN      IDS     FRAG    TID    LGD&lt;br/&gt;bicycle         0.435   0.671   0.552   0.688   58      0.379   0.192   2       4       25.0    32      10      26      0       0       0.20   1.60&lt;br/&gt;bus             0.787   0.568   0.814   0.900   86      0.733   0.294   3       0       10.3    70      7       16      0       3       0.90   1.10&lt;br/&gt;car             0.793   0.435   0.837   0.847   2729    0.702   0.266   104     33      213.0   2262    345     446     21      16      0.48   0.73&lt;br/&gt;motorcy         0.744   0.473   0.739   0.926   238     0.681   0.317   5       2       19.7    175     13      62      1       1       0.67   1.61&lt;br/&gt;pedestr         0.782   0.445   0.796   0.912   1470    0.693   0.331   47      22      75.4    1117    98      300     53      14      0.28   0.95&lt;br/&gt;trailer         1.000   0.210   1.000   1.000   41      1.000   0.210   1       0       0.0     41      0       0       0       0       0.00   0.00&lt;br/&gt;truck           0.462   0.494   0.672   0.580   177     0.390   0.286   4       5       42.4    119     50      58      0       1       0.00   0.12&lt;br/&gt;&lt;br/&gt;Aggregated results:&lt;br/&gt;AMOTA   0.715&lt;br/&gt;AMOTP   0.471&lt;br/&gt;RECALL  0.773&lt;br/&gt;MOTAR   0.836&lt;br/&gt;GT      685&lt;br/&gt;MOTA    0.654&lt;br/&gt;MOTP    0.271&lt;br/&gt;MT      166&lt;br/&gt;ML      66&lt;br/&gt;FAF     55.1&lt;br/&gt;TP      3816&lt;br/&gt;FP      523&lt;br/&gt;FN      908&lt;br/&gt;IDS     75&lt;br/&gt;FRAG    35&lt;br/&gt;TID     0.36&lt;br/&gt;LGD     0.87&lt;br/&gt;Eval time: 106.0s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><author>1959376918@qq.com (刘胜琪)</author><guid isPermaLink="true">/Blog/archives/3DtrackingOnNuScences/</guid><pubDate>Sun, 17 Oct 2021 00:00:00 +0806</pubDate></item><item><title>blender script使用</title><link>/Blog/archives/blender_script/</link><description>&lt;p&gt;&lt;strong&gt;blender script&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;将blender中所有的button转换为代码接口，操纵物体&lt;/p&gt;&lt;p&gt;重要学习数据类型：bpy&lt;/p&gt;&lt;p&gt;bpy.data.object：打开的模型物体&lt;/p&gt;&lt;p&gt;Data is added and removed via methods on the collections in &lt;a href="https://docs.blender.org/api/current/bpy.data.html#module-bpy.data"&gt;&lt;code&gt;bpy.data&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;“poll” function which checks if the cursor is in a valid area or if the object is in the correct mode ：判断是否选择正确的操作方式&lt;/p&gt;&lt;p&gt;blender文件夹下scripts/startup/中有python的环境&lt;/p&gt;&lt;p&gt;When a script is imported as a module, its class instances will remain inside the module and can be accessed later on by importing that module again.&lt;/p&gt;&lt;p&gt;run the script：&lt;/p&gt;&lt;blockquote&gt;
&lt;p&gt;blender --python /home/me/my_script.py&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;While &lt;code&gt;__init__()&lt;/code&gt; and &lt;code&gt;__del__()&lt;/code&gt; will be called if defined, the class instances lifetime only spans the execution.&lt;/p&gt;&lt;p&gt;数据保存为blender.data的格式，下次开启不会丢失&lt;/p&gt;&lt;p&gt;The register/unregister calls are used so it’s possible to toggle add-ons and reload scripts while Blender runs&lt;/p&gt;&lt;p&gt;每次重新跑，估计得重新加载选项&lt;/p&gt;&lt;p&gt;run script&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Loaded in the text editor and press &lt;em&gt;Run Script&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Typed or pasted into the interactive console.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Execute a Python file from the command line with Blender, e.g:&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;blender --python /home/me/my_script.py
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建立子类，元素命名一般以bl_开头表示自己添加的&lt;/p&gt;&lt;p&gt;Notice these classes don’t define an &lt;code&gt;__init__(self)&lt;/code&gt; function. While &lt;code&gt;__init__()&lt;/code&gt; and &lt;code&gt;__del__()&lt;/code&gt; will be called if defined, the class instances lifetime only spans the execution&lt;/p&gt;&lt;p&gt;&lt;strong&gt;步骤&lt;/strong&gt;&lt;/p&gt;&lt;h2&gt;定义Panel面板&lt;/h2&gt;
&lt;p&gt;创建类&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestPanel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Panel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#创建Panel的实例&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;定义Panel类的属性&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestPanel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Panel&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;bl_label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;LuoZhiXiang&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;bl_idname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PT_Test Panel&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;bl_space_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VIEW_3D&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;bl_region_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;UI&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;bl_category&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BadGuy&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;#注意前面一定要带有bl_的前缀，否则是会报错的&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;创建Space Type （插件在哪种工作空间使用）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;注意全部要大写！它的作用就是定义这个插件是作用于哪个工作区域Workspace内。&lt;/p&gt;&lt;p&gt;可以切换测试，日志会输出相关type。&lt;/p&gt;&lt;figure style="flex: 127.63157894736842" &gt;&lt;img width="291" height="114" src="https://cdn.jsdelivr.net/gh/LSQsjtu/Blog@gh-pages/archives/assets/b4ecbc125d6216fc415bd62a91305102.jpg" /&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bl_space_type=&amp;quot;VIEW_3D&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;figure style="flex: 60.301507537688444" &gt;&lt;img width="720" height="597" src="https://cdn.jsdelivr.net/gh/LSQsjtu/Blog@gh-pages/archives/assets/f0a3975b5c50d3ceecb0d6e7f3ae1f78.jpg" /&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;设置使用区域，设置为UI即可&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bl_region_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;UI&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其他种类：&lt;/p&gt;&lt;figure style="flex: 63.45609065155807" &gt;&lt;img width="448" height="353" src="https://cdn.jsdelivr.net/gh/LSQsjtu/Blog@gh-pages/archives/assets/5b20d1e58bc9c39cc00db43fd5941a14.jpg" /&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;设置&lt;strong&gt;归属类别&lt;/strong&gt;（将此Panel实例归到哪一类里面）&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bl_category&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BadGuy&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;#SideBar Name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;figure style="flex: 60.0" &gt;&lt;img width="720" height="600" src="https://cdn.jsdelivr.net/gh/LSQsjtu/Blog@gh-pages/archives/assets/3637e44f4b800e75bee53cac4372ac07.jpg" /&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1&gt;加载更新&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;register() 注册/登记/加载&lt;/li&gt;
&lt;li&gt;unregister() 不加载&lt;/li&gt;
&lt;li&gt;utils——utilities（实用工具）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def register():
    bpy.utils.register_class(TestPanel)

def unregister():
    bpy.utils.unregister_class(TestPanel）

if __name__==&amp;quot;__main__&amp;quot;:
    register()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过直接执行脚本来扩展Blender意味着脚本完成执行后脚本定义的类在Blender中保持可用。与将脚本作为模块导入相比，以这种方式使用脚本使得将来访问其类（例如取消注册它们）变得更加困难。将脚本作为模块导入时，其类实例将保留在模块中，稍后可以通过再次导入该模块来访问。&lt;/p&gt;</description><author>1959376918@qq.com (刘胜琪)</author><guid isPermaLink="true">/Blog/archives/blender_script/</guid><pubDate>Tue, 19 Oct 2021 00:00:00 +0806</pubDate></item><item><title>Matlab学习</title><link>/Blog/archives/matlab%E8%AF%AD%E6%B3%95/</link><description>&lt;p&gt;&lt;strong&gt;matlab学习&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;clc：清除命令窗口的内容，对工作环境中的全部变量无任何影响
close：关闭当前的Figure窗口
close all:关闭所有的Figure窗口
clear：清除工作空间的所有变量
clear all：清除工作空间的所有变量，函数，和MEX文件&lt;/p&gt;&lt;p&gt;grid on；写一次就可以打开网格&lt;/p&gt;&lt;p&gt;%.*对应元素相乘， *是矩阵相乘&lt;/p&gt;</description><author>1959376918@qq.com (刘胜琪)</author><guid isPermaLink="true">/Blog/archives/matlab%E8%AF%AD%E6%B3%95/</guid><pubDate>Tue, 19 Oct 2021 00:00:00 +0806</pubDate></item><item><title>pytorch基础教程</title><link>/Blog/archives/base%20pytorch/</link><description>&lt;p&gt;&lt;strong&gt;pytorch基础教程&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;tensors是一种特殊的数据类型和arrays，matrices类似。用tensors编码代替input和output，还有模型参数。&lt;/p&gt;&lt;h1&gt;创建初始化方式&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通过data生成torch.tensor(data)，这时类型自动推断，和data中类型一致&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从numpy array&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;np_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x_np&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_numpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np_array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;&lt;p&gt;从另一个tensor&lt;/p&gt;&lt;p&gt;隐式地保持类型一致&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x_ones&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ones_like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# retains the properties of x_data&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ones Tensor: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x_ones&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x_rand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand_like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# overrides the datatype of x_data&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Random Tensor: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x_rand&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;调用函数&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;shape要是tensor维度的tuple&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
&lt;span class="n"&gt;rand_tensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ones_tensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;zeros_tensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Random Tensor: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;rand_tensor&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ones Tensor: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ones_tensor&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Zeros Tensor: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;zeros_tensor&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;tensor属性&lt;/h1&gt;
&lt;p&gt;tensor.shape,tensor.dtype（datatype的缩写）,torch.device&lt;/p&gt;&lt;h1&gt;tensor数学运算&lt;/h1&gt;
&lt;p&gt;transposing, indexing, slicing, mathematical operations, linear algebra, random sampling, and more are comprehensively described &lt;a href="https://pytorch.org/docs/stable/torch.html"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;tensor.to(‘cuda’)还可以显式在定义时指定device=torch.device(“cuda”)&lt;/p&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;和numpy一样的切片操作&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用torch.cat拼接tensor（torch.stack用的较少），torch.cat可以指定维度&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;乘法，对应位置相乘&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# This computes the element-wise product&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tensor.mul(tensor) &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mul&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Alternative syntax:&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tensor * tensor &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;矩阵乘法&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tensor.matmul(tensor.T) &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;matmul&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Alternative syntax:&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tensor @ tensor.T &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt; &lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;替代修改操作&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Operations that have a &lt;code&gt;_&lt;/code&gt; suffix are in-place. For example: &lt;code&gt;x.copy_(y)&lt;/code&gt;, &lt;code&gt;x.t_()&lt;/code&gt;, will change &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;

&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in_place操作会节省内存，但是求导时会报错，故不鼓励使用&lt;/p&gt;&lt;h2&gt;Bridge with NumPy&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;t: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;n: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;t: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;n: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;两者会同时修改，潜在的空间一样&lt;/p&gt;&lt;h1&gt;&lt;code&gt;TORCH.AUTOGRAD&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Forward Propagation&lt;/strong&gt;: 产生最佳最正确的输出&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Backward Propagation&lt;/strong&gt;: 调整它的参数根据生成的error&lt;/p&gt;&lt;p&gt;i.e.:&lt;strong&gt;abbr.&lt;/strong&gt;亦即（源自拉丁文 id est）&lt;/p&gt;&lt;p&gt;w.r.t. :with respect to，相对某一方面而言&lt;/p&gt;&lt;p&gt;backward后会把loss值free，如果loss不是标量，需要指定gradient&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;requires_grad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;6.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;4.&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;requires_grad&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="n"&gt;external_grad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gradient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;external_grad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;directed acyclic graph (DAG)有向无环图，leaves are the input tensors, roots are the output tensors.倒过来的树，从root跟踪到leaves自动计算梯度&lt;/p&gt;&lt;p&gt;&lt;strong&gt;frozen parameters&lt;/strong&gt;：用来微调模型参数&lt;/p&gt;&lt;h1&gt;NEURAL NETWORKS&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Define the neural network that has some learnable parameters (or weights)&lt;/li&gt;
&lt;li&gt;Iterate over a dataset of inputs&lt;/li&gt;
&lt;li&gt;Process input through the network&lt;/li&gt;
&lt;li&gt;Compute the loss (how far is the output from being correct)&lt;/li&gt;
&lt;li&gt;Propagate gradients back into the network’s parameters&lt;/li&gt;
&lt;li&gt;Update the weights of the network, typically using a simple update rule: &lt;code&gt;weight = weight - learning_rate * gradient&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;torch.Tensor&lt;/code&gt; - A &lt;em&gt;multi-dimensional array&lt;/em&gt; with support for autograd operations like &lt;code&gt;backward()&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;code&gt;nn.Module&lt;/code&gt;-封装好的类，方便move到GPU上&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grad_fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# MSELoss&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grad_fn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_functions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c1"&gt;# Linear&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grad_fn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_functions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_functions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c1"&gt;# ReLU&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样可以观察计算图&lt;/p&gt;&lt;p&gt;每次backward前，把计算图梯度清零，否则每次会积累&lt;/p&gt;&lt;h1&gt;数据处理&lt;/h1&gt;
&lt;p&gt;首先导入为ndarray，然后转换为torch.*Tensor&lt;/p&gt;</description><author>1959376918@qq.com (刘胜琪)</author><guid isPermaLink="true">/Blog/archives/base%20pytorch/</guid><pubDate>Tue, 26 Oct 2021 00:00:00 +0806</pubDate></item><item><title>泰迪熊</title><link>/Blog/archives/Teddy%20Bear/</link><description>&lt;p&gt;&lt;strong&gt;Teddy Bear&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;从小陪伴到大的朋友，却一起养成了坏习惯，这让自己一事无成，没有办法去承担自己应该承担的东西，最后还差一点无法守护自己的朋友。&lt;/p&gt;&lt;p&gt;面对爱情一味的去改变自己的生活，却不是自己真正的想要去改变，只是自己认为自己爱对方，所以就可以为了对方改变自己的一切行为。&lt;/p&gt;&lt;p&gt;我认为你应该有足够的能力去承担这个角色所应该有的责任，在困苦时，找到属于两个人共同的解决方法，不顾一切的去勇往直前（这是我想象的未来的相处方式）。&lt;/p&gt;&lt;p&gt;你可以同时是大人和小孩，有大人的成熟和小孩内心最坚强的陪伴。&lt;/p&gt;</description><author>1959376918@qq.com (刘胜琪)</author><guid isPermaLink="true">/Blog/archives/Teddy%20Bear/</guid><pubDate>Tue, 26 Oct 2021 00:00:00 +0806</pubDate></item></channel></rss>